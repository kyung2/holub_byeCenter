<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
	"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>WinMerge File Compare Report</title>
<style type="text/css">
<!--
td,th {font-size: 12pt;}
.ln {text-align: right; background-color: lightgrey;}
.title {color: white; background-color: blue; vertical-align: top;}
.sf3b2 {color: #000000; background-color: #ffffff; }
.sf3b5 {color: #000000; background-color: #000000; }
.sf3b14 {color: #000000; background-color: #ffa0a0; }
.sf3b16 {color: #000000; background-color: #f1e2ad; }
.sf6b2 {color: #ffffff; background-color: #ffffff; }
.sf6b5 {color: #ffffff; background-color: #000000; }
.sf6b14 {color: #ffffff; background-color: #ffa0a0; }
.sf6b16 {color: #ffffff; background-color: #f1e2ad; }
.sf7b2 {color: #0000ff; background-color: #ffffff; font-weight: bold; }
.sf7b5 {color: #0000ff; background-color: #000000; font-weight: bold; }
.sf7b14 {color: #0000ff; background-color: #ffa0a0; font-weight: bold; }
.sf7b16 {color: #0000ff; background-color: #f1e2ad; font-weight: bold; }
.sf8b2 {color: #800080; background-color: #ffffff; }
.sf8b5 {color: #800080; background-color: #000000; }
.sf8b14 {color: #800080; background-color: #ffa0a0; }
.sf8b16 {color: #800080; background-color: #f1e2ad; }
.sf9b2 {color: #008000; background-color: #ffffff; }
.sf9b5 {color: #008000; background-color: #000000; }
.sf9b14 {color: #008000; background-color: #ffa0a0; }
.sf9b16 {color: #008000; background-color: #f1e2ad; }
.sf10b2 {color: #ff0000; background-color: #ffffff; }
.sf10b5 {color: #ff0000; background-color: #000000; }
.sf10b14 {color: #ff0000; background-color: #ffa0a0; }
.sf10b16 {color: #ff0000; background-color: #f1e2ad; }
.sf11b2 {color: #606060; background-color: #ffffff; }
.sf11b5 {color: #606060; background-color: #000000; }
.sf11b14 {color: #606060; background-color: #ffa0a0; }
.sf11b16 {color: #606060; background-color: #f1e2ad; }
.sf12b2 {color: #800000; background-color: #ffffff; }
.sf12b5 {color: #800000; background-color: #000000; }
.sf12b14 {color: #800000; background-color: #ffa0a0; }
.sf12b16 {color: #800000; background-color: #f1e2ad; }
.sf13b2 {color: #0080c0; background-color: #ffffff; }
.sf13b5 {color: #0080c0; background-color: #000000; }
.sf13b14 {color: #0080c0; background-color: #ffa0a0; }
.sf13b16 {color: #0080c0; background-color: #f1e2ad; }
.sf15b2 {color: #000000; background-color: #ffffff; }
.sf15b5 {color: #000000; background-color: #000000; }
.sf15b14 {color: #000000; background-color: #ffa0a0; }
.sf15b16 {color: #000000; background-color: #f1e2ad; }
.sf17b2 {color: #000000; background-color: #ffffff; }
.sf17b5 {color: #000000; background-color: #000000; }
.sf17b14 {color: #000000; background-color: #ffa0a0; }
.sf17b16 {color: #000000; background-color: #f1e2ad; }
.sf18b2 {color: #000080; background-color: #ffffff; }
.sf18b5 {color: #000080; background-color: #000000; }
.sf18b14 {color: #000080; background-color: #ffa0a0; }
.sf18b16 {color: #000080; background-color: #f1e2ad; }
.sf19b2 {color: #0080c0; background-color: #ffffff; }
.sf19b5 {color: #0080c0; background-color: #000000; }
.sf19b14 {color: #0080c0; background-color: #ffa0a0; }
.sf19b16 {color: #0080c0; background-color: #f1e2ad; }
-->
</style>
</head>
<body>
<table cellspacing="0" cellpadding="0" style="width: 100%; margin: 0; border: none;">
<thead>
<tr>
<th class="title" style="width:0%"></th><th class="title" style="width:50.000000%">C:\Users\hyunkyung\Downloads\HolubLife\src\com\holub\life\Cell.java</th>
<th class="title" style="width:0%"></th><th class="title" style="width:50.000000%">C:\Users\hyunkyung\Desktop\DPTeam\lifegame\src\com\holub\life\Cell.java</th>
</tr>
</thead>
<tbody>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">package</span><span class="sf11b2"> </span><span class="sf3b2">com</span><span class="sf11b2">.</span><span class="sf3b2">holub</span><span class="sf11b2">.</span><span class="sf3b2">life</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">package</span><span class="sf11b2"> </span><span class="sf3b2">com</span><span class="sf11b2">.</span><span class="sf3b2">holub</span><span class="sf11b2">.</span><span class="sf3b2">life</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">import</span><span class="sf17b16"> </span><span class="sf17b16">com</span><span class="sf17b16">.</span><span class="sf17b16">holub</span><span class="sf17b16">.</span><span class="sf17b16">life</span><span class="sf17b16">.</span><span class="sf17b16">Theme</span><span class="sf17b16">.</span><span class="sf17b16">*</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">import</span><span class="sf17b16"> </span><span class="sf17b16">com</span><span class="sf17b16">.</span><span class="sf17b16">holub</span><span class="sf17b16">.</span><span class="sf17b16">ui</span><span class="sf17b16">.</span><span class="sf17b16">MenuSite</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">import</span><span class="sf11b2"> </span><span class="sf3b2">java</span><span class="sf11b2">.</span><span class="sf3b2">awt</span><span class="sf11b2">.</span><span class="sf11b2">*</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">import</span><span class="sf11b2"> </span><span class="sf3b2">java</span><span class="sf11b2">.</span><span class="sf3b2">awt</span><span class="sf11b2">.</span><span class="sf11b2">*</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">import</span><span class="sf11b2"> </span><span class="sf3b2">com</span><span class="sf11b2">.</span><span class="sf3b2">holub</span><span class="sf11b2">.</span><span class="sf3b2">life</span><span class="sf11b2">.</span><span class="sf3b2">Storable</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">import</span><span class="sf11b2"> </span><span class="sf3b2">com</span><span class="sf11b2">.</span><span class="sf3b2">holub</span><span class="sf11b2">.</span><span class="sf3b2">life</span><span class="sf11b2">.</span><span class="sf3b2">Storable</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2">/</span><span class="sf9b2">***</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * This interface is the basic unit that comprises a life board.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * This interface is the basic unit that comprises a life board.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * It's implemented both by {@link Resident} (which represents</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * It's implemented both by {@link Resident} (which represents</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * an individual cell on the board) and {@link Neighborhood},</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * an individual cell on the board) and {@link Neighborhood},</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * which represents a group of cells.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * which represents a group of cells.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> *</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> *</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * @include /etc/license.txt</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> * @include /etc/license.txt</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">interface</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">interface</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">**
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * 나정 주석
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * 셀은 한 칸을 의미한다
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; */</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">*sangwon
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;셀은 인터페이스이고 이걸 구현하는애는 네이버후드랑 레지던트임
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;생성은 각자 생성자가 있지만 실제론 create 함수로 만드는 의미가 더 크니까 create 도 생성자로 취급하는게 좋을듯
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; */</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Figure out the next state of the cell, given the specified</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Figure out the next state of the cell, given the specified</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;neighbors.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;neighbors.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true if the cell is unstable (changed state).</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true if the cell is unstable (changed state).</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">figureNextState</span><span class="sf11b2">(</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">north</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">south</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">figureNextState</span><span class="sf11b2">(</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">north</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">south</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">east</span><span class="sf11b2">,</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">west</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">east</span><span class="sf11b2">,</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">west</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">northeast</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">northwest</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">northeast</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">northwest</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">southeast</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">southwest</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">southeast</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">southwest</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Access a specific contained cell located at the edge of the</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Access a specific contained cell located at the edge of the</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;composite cell.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;composite cell.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param row &nbsp; &nbsp; &nbsp;The requested row. Must be on the edge of</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param row &nbsp; &nbsp; &nbsp;The requested row. Must be on the edge of</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the block.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the block.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param column &nbsp; The requested column. Must be on the edge</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param column &nbsp; The requested column. Must be on the edge</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;of the block.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;of the block.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true &nbsp; &nbsp;if the the state changed.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true &nbsp; &nbsp;if the the state changed.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf8b2">edge</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">row</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">column</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf8b2">edge</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">row</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">column</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">**hyunkyung
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * 다음 세대에서 살아있을건지 안살아있을건지 판단</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * */</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Transition to the state computed by the most recent call to</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Transition to the state computed by the most recent call to</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;{@link #figureNextState}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;{@link #figureNextState}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true if a changed of state happened during the transition.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return true if a changed of state happened during the transition.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transition</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transition</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">void</span><span class="sf17b16"> </span><span class="sf17b16">changeCanvas</span><span class="sf17b16">(</span><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">gridSize</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Redraw yourself in the indicated</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Redraw yourself in the indicated</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;rectangle on the indicated Graphics object if ncessary. This</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;rectangle on the indicated Graphics object if ncessary. This</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;method is meant for a conditional redraw, where some of the</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;method is meant for a conditional redraw, where some of the</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;cells might not be refreshed (if they haven't changed state,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;cells might not be refreshed (if they haven't changed state,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;for example).</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;for example).</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param g redraw using this graphics,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param g redraw using this graphics,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param here a rectangle that describes the bounds of the</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param here a rectangle that describes the bounds of the</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;current cell.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;current cell.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param drawAll if true, draw an entire compound cell;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param drawAll if true, draw an entire compound cell;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;otherwise, draw only the subcells that need to be redrawn.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;otherwise, draw only the subcells that need to be redrawn.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">redraw</span><span class="sf11b2">(</span><span class="sf3b2">Graphics</span><span class="sf11b2"> </span><span class="sf3b2">g</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">drawAll</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">redraw</span><span class="sf11b2">(</span><span class="sf3b2">Graphics</span><span class="sf11b2"> </span><span class="sf3b2">g</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">drawAll</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** A user has clicked somewhere within you.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** A user has clicked somewhere within you.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param here The position of the click relative to the bounding</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@param here The position of the click relative to the bounding</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rectangle of the current Cell.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rectangle of the current Cell.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">**hyunkyung 주석
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * user클릭 Point랑 Rectangle이 있음.. 이걸로 보고 */</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">userClicked</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">surface</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">userClicked</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">surface</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">public</span><span class="sf17b16"> </span><span class="sf17b16">boolean</span><span class="sf17b16"> </span><span class="sf17b16">userSet</span><span class="sf17b16">(</span><span class="sf17b16">Point</span><span class="sf17b16"> </span><span class="sf17b16">here</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">Rectangle</span><span class="sf17b16"> </span><span class="sf17b16">surface</span><span class="sf17b16">,</span><span class="sf17b16">Boolean</span><span class="sf17b16"> </span><span class="sf17b16">setTo</span><span class="sf17b16">)</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return true if this cell or any subcells are alive.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return true if this cell or any subcells are alive.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">**살아있냐 안살아있냐 판단하는 TF Boolean 타입으로 판단*/</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return the specified width plus the current cell's width</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return the specified width plus the current cell's width</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">/</span><span class="sf17b16">**
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; *</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp; * */</span><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">widthInCells</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf8b2">widthInCells</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return a fresh (newly created) object identical to yourself</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Return a fresh (newly created) object identical to yourself</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;in content.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;in content.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf8b2">create</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf8b2">create</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Returns a Direction indicated the directions of the cells</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Returns a Direction indicated the directions of the cells</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;that have changed state.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;that have changed state.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return A Direction object that indicates the edge or edges</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@return A Direction object that indicates the edge or edges</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;on which a change has occured.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;on which a change has occured.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Direction</span><span class="sf11b2"> </span><span class="sf8b2">isDisruptiveTo</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Direction</span><span class="sf11b2"> </span><span class="sf8b2">isDisruptiveTo</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Set the cell and all subcells into a "dead" state.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Set the cell and all subcells into a "dead" state.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">clear</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">clear</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">**</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">**</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;The Cell.Memento interface stores the state</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;The Cell.Memento interface stores the state</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;of a Cell and all its subcells for future restoration.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;of a Cell and all its subcells for future restoration.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; *</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; *</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@see Cell</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;@see Cell</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">interface</span><span class="sf11b2"> </span><span class="sf3b2">Memento</span><span class="sf11b2"> </span><span class="sf7b2">extends</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">interface</span><span class="sf11b2"> </span><span class="sf3b2">Memento</span><span class="sf11b2"> </span><span class="sf7b2">extends</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** On creation of the memento, indicate that a cell is</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** On creation of the memento, indicate that a cell is</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; * &nbsp;alive.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; * &nbsp;alive.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">markAsAlive</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">location</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">markAsAlive</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">location</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** On restoration of a cell from a memento, indicate that</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** On restoration of a cell from a memento, indicate that</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; * &nbsp;a cell is alive.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; * &nbsp;a cell is alive.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">location</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">location</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** &nbsp;This method is used internally to save or restore the state</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** &nbsp;This method is used internally to save or restore the state</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; of a cell from a memento.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; of a cell from a memento.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; @return true if this cell was modified by the transfer.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp; @return true if this cell was modified by the transfer.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transfer</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf3b2">memento</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">upperLeftCorner</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transfer</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf3b2">memento</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">upperLeftCorner</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">doLoad</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">doLoad</span><span class="sf11b2"> </span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Possible value for the "load" argument to transfer() */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Possible value for the "load" argument to transfer() */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">STORE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">STORE</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Possible value for the "load" argument to transfer() */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** Possible value for the "load" argument to transfer() */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">LOAD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">true</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">LOAD</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">true</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** This method is used by container of the outermost cell.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** This method is used by container of the outermost cell.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;It is not used internally. It need be implemented only by</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;It is not used internally. It need be implemented only by</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;whatever class defines the outermost cell in the universe.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;whatever class defines the outermost cell in the universe.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;Other cell implementions should throw an</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;Other cell implementions should throw an</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;UnsupportedOperationException when this method is called.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;UnsupportedOperationException when this method is called.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf8b2">createMemento</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf8b2">createMemento</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** The DUMMY Singleton represents a permanently dead (thus stable)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf9b2">/</span><span class="sf9b2">** The DUMMY Singleton represents a permanently dead (thus stable)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;cell. It's used for the edges of the grid. It's a singleton.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;cell. It's used for the edges of the grid. It's a singleton.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;The Dummy class is private, but it is accessed through</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;The Dummy class is private, but it is accessed through</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;the public DUMMY field, declared below. I'd like this</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;the public DUMMY field, declared below. I'd like this</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;class to be private, but the JLS doesn't allow private</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;class to be private, but the JLS doesn't allow private</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;members in an interface.</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; * &nbsp;members in an interface.</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf9b2"> &nbsp; &nbsp; */</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">final</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">DUMMY</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">new</span><span class="sf11b2"> </span><span class="sf8b2">Cell</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">static</span><span class="sf11b2"> </span><span class="sf7b2">final</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">DUMMY</span><span class="sf11b2"> </span><span class="sf11b2">=</span><span class="sf11b2"> </span><span class="sf7b2">new</span><span class="sf11b2"> </span><span class="sf8b2">Cell</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">figureNextState</span><span class="sf11b2">(</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">n</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">s</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">e</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">w</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">figureNextState</span><span class="sf11b2">(</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">n</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">s</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">e</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">w</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">ne</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">nw</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">se</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">sw</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">ne</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">nw</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">se</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf3b2">sw</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">true</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">true</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">edge</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">c</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">this</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">edge</span><span class="sf11b2">(</span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">r</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf3b2">c</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">this</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">isAlive</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">create</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">this</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Cell</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">create</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">this</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Direction</span><span class="sf11b2"> </span><span class="sf8b2">isDisruptiveTo</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">Direction</span><span class="sf11b2">.</span><span class="sf3b2">NONE</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Direction</span><span class="sf11b2"> </span><span class="sf8b2">isDisruptiveTo</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf3b2">Direction</span><span class="sf11b2">.</span><span class="sf3b2">NONE</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">clear</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">clear</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">widthInCells</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">int</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp;</span><span class="sf8b2">widthInCells</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf10b2">0</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">transition</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf8b2">transition</span><span class="sf11b2">(</span><span class="sf11b2">)</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">public</span><span class="sf17b16"> </span><span class="sf17b16">void</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp; &nbsp; </span><span class="sf17b16">&nbsp;</span><span class="sf17b16">changeCanvas</span><span class="sf17b16">(</span><span class="sf17b16">int</span><span class="sf17b16"> </span><span class="sf17b16">gridSize</span><span class="sf17b16">)</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">{</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16"> </span><span class="sf17b16">&nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16">
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">@</span><span class="sf17b16">Override
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">public</span><span class="sf17b16"> </span><span class="sf17b16">boolean</span><span class="sf17b16"> </span><span class="sf17b16">userSet</span><span class="sf17b16">(</span><span class="sf17b16">Point</span><span class="sf17b16"> </span><span class="sf17b16">here</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">Rectangle</span><span class="sf17b16"> </span><span class="sf17b16">surface</span><span class="sf17b16">,</span><span class="sf17b16"> </span><span class="sf17b16">Boolean</span><span class="sf17b16"> </span><span class="sf17b16">setTo</span><span class="sf17b16">)</span><span class="sf17b16"> </span><span class="sf17b16">{
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">return</span><span class="sf17b16"> </span><span class="sf17b16">setTo</span><span class="sf17b16">;
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td style="color: #000000; background-color: #c0c0c0; "><code>&nbsp;</code></td>
<td class="ln"></td><td style="color: #000000; background-color: #efcb05; "><code><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16"> &nbsp; &nbsp;</span><span class="sf17b16">}
</span>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">userClicked</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">s</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">)</span><span class="sf11b2">{</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf8b2">userClicked</span><span class="sf11b2">(</span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">h</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">s</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">)</span><span class="sf11b2">{</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">redraw</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">(</span><span class="sf3b2">Graphics</span><span class="sf11b2"> </span><span class="sf3b2">g</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">void</span><span class="sf11b2"> </span><span class="sf8b2">redraw</span><span class="sf11b2"> </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">&nbsp; &nbsp; </span><span class="sf11b2">(</span><span class="sf3b2">Graphics</span><span class="sf11b2"> </span><span class="sf3b2">g</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Rectangle</span><span class="sf11b2"> </span><span class="sf3b2">here</span><span class="sf11b2">,</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">drawAll</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">)</span><span class="sf11b2">{</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">drawAll</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">)</span><span class="sf11b2">{</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transfer</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf3b2">m</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">ul</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">load</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf8b2">transfer</span><span class="sf11b2">(</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf3b2">m</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf3b2">Point</span><span class="sf11b2"> </span><span class="sf3b2">ul</span><span class="sf11b2">,</span><span class="sf11b2"> </span><span class="sf7b2">boolean</span><span class="sf11b2"> </span><span class="sf3b2">load</span><span class="sf11b2"> </span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">return</span><span class="sf11b2"> </span><span class="sf7b2">false</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf8b2">createMemento</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">public</span><span class="sf11b2"> </span><span class="sf3b2">Storable</span><span class="sf11b2"> </span><span class="sf8b2">createMemento</span><span class="sf11b2">(</span><span class="sf11b2">)</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">throw</span><span class="sf11b2"> </span><span class="sf7b2">new</span><span class="sf11b2"> </span><span class="sf8b2">UnsupportedOperationException</span><span class="sf11b2">(</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">{</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf7b2">throw</span><span class="sf11b2"> </span><span class="sf7b2">new</span><span class="sf11b2"> </span><span class="sf8b2">UnsupportedOperationException</span><span class="sf11b2">(</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf12b2">"Cannot create memento of dummy block"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf12b2">"Cannot create memento of dummy block"</span><span class="sf11b2">)</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2"> &nbsp; &nbsp;</span><span class="sf11b2">}</span><span class="sf11b2">;</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
<td class="ln"></td><td class="sf3b2"><code><span class="sf11b2">}</span></code></td>
</tr>
<tr valign="top">
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
<td class="ln"></td><td class="sf3b2"><code>&nbsp;</code></td>
</tr>
</tbody>
</table>
</body>
</html>
